import { v2 as cloudinary } from "cloudinary";
import { unlink } from "fs";

cloudinary.config({
  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
  api_key: process.env.CLOUDINARY_API_KEY,
  api_secret: process.env.CLOUDINARY_API_SECRET,
});

console.log({
  //No need for this but this is for safety , that do we getting the env variables
  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
  api_key: process.env.CLOUDINARY_API_KEY,
  api_secret: process.env.CLOUDINARY_API_SECRET,
});

const uploadOnCloudinary = async (localFilePath) => {
  //Path provided
  try {
    if (!localFilePath) {
      //validate the path
      throw new Error("No file path provided");
    }

    console.log("Uploading file from local path:", localFilePath);

    const response = await cloudinary.uploader.upload(localFilePath, {
      //by this method we are uploading image on clodinary server , and if it successful url generated by this
      resource_type: "auto", // supports images, videos, PDFs, etc.
    });
    console.log("Cloudinary upload response:", response);

    return response; //returning the url
  } catch (error) {
    console.error("Cloudinary upload error:", error);
    throw error;
    // OR: return null;
  } finally {
    try {
      //why we unlink it here , because if this code works or gives error means if try/catch anyone execute then simply unlink it in the end , thats why unlink in finally
      if (localFilePath) {
        unlink(localFilePath);
        console.log("File Successfully deleted from the server", localFilePath);
      }
    } catch (error) {
      console.log("Error occured while deleting the file", error);
    }
  }
};

export default uploadOnCloudinary;
